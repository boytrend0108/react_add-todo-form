{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","components/Form/Form.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","id","completed","cn","style","color","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","el","Form","todoList","onSubmit","useState","setUser","isUser","setIsUser","setTitle","isTitle","setIsTitle","action","method","event","preventDefault","newTodo","Math","max","htmlFor","type","value","placeholder","onChange","target","App","setTodoList","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9ea4c25.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2\n        className=\"TodoInfo__title\"\n        style={{ color: completed ? 'green' : 'red' }}\n      >\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport const getUserById = (userId: number) => {\n  return usersFromServer.find((el: User) => el.id === userId);\n};\n","import React, { useState } from 'react';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todoList: Todo[];\n  onSubmit: (todo: Todo) => void;\n};\n\nconst getNewId = (todos: Todo[]):number => {\n  return Math.max(...todos.map(el => el.id));\n};\n\nexport const Form: React.FC<Props> = ({ todoList, onSubmit }) => {\n  const [user, setUser] = useState(0);\n  const [isUser, setIsUser] = useState(true);\n\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(true);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsUser(!!user);\n    setIsTitle(!!title);\n\n    if (!user || !title) {\n      return;\n    }\n\n    const newTodo = {\n      id: getNewId(todoList) + 1,\n      title,\n      completed: false,\n      userId: user,\n      user: getUserById(+user),\n    };\n\n    onSubmit(newTodo);\n\n    setTitle('');\n    setUser(0);\n  };\n\n  const handleTitleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitle(true);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+event.target.value);\n    setIsUser(true);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">User</label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"Enter title\"\n          onChange={handleTitleChange}\n        />\n\n        {!isTitle && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User</label>\n        <select\n          id=\"user\"\n          data-cy=\"userSelect\"\n          name=\"user\"\n          value={user}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\">Choose a user</option>\n\n          {usersFromServer.map((el: User) => {\n            return (\n              <option value={el.id} key={el.id}>\n                {el.name}\n              </option>\n            );\n          })}\n        </select>\n\n        {!isUser && <span className=\"error\">Please choose a user</span>}\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { Form } from './components/Form';\n\nimport { getUserById } from './services/user';\nimport { Todo } from './types/Todo';\n\nconst todos = todosFromServer.map(el => {\n  return {\n    ...el,\n    user: getUserById(el.userId),\n  };\n});\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodoList(currentList => [...currentList, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form\n        todoList={todoList}\n        onSubmit={addTodo}\n      />\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}